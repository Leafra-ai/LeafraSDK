# Makefile for ExecutTorch C++ Bridge Example
# 
# This demonstrates how to compile C++ code that uses the ExecutTorch bridge
# to interface with the prebuilt iOS/macOS XCFrameworks.

# Compiler settings
CXX = clang++
CXXFLAGS = -std=c++14 -fexceptions -Wall -Wextra -O2
OBJCFLAGS = -fobjc-arc

# Paths
BRIDGE_DIR = .
BUILD_DIR = build
XCFRAMEWORK_DIR = ../prebuilt/executorch/apple

# Headers
INCLUDES = -I$(BRIDGE_DIR) -I$(XCFRAMEWORK_DIR)/executorch.xcframework/macos-arm64/Headers

# Frameworks and libraries
FRAMEWORKS = -framework Foundation
STATIC_LIBS = \
    $(XCFRAMEWORK_DIR)/executorch.xcframework/macos-arm64/libexecutorch_macos.a \
    $(XCFRAMEWORK_DIR)/backend_coreml.xcframework/macos-arm64/libbackend_coreml_macos.a \
    $(XCFRAMEWORK_DIR)/backend_mps.xcframework/macos-arm64/libbackend_mps_macos.a \
    $(XCFRAMEWORK_DIR)/backend_xnnpack.xcframework/macos-arm64/libbackend_xnnpack_macos.a \
    $(XCFRAMEWORK_DIR)/kernels_portable.xcframework/macos-arm64/libkernels_portable_macos.a \
    $(XCFRAMEWORK_DIR)/kernels_optimized.xcframework/macos-arm64/libkernels_optimized_macos.a

# Source files
BRIDGE_SOURCES = \
    ExecuTorch_Bridge.mm \
    ExecuTorchError_Bridge.mm \
    ExecuTorchLog_Bridge.mm \
    ExecuTorchModule_Bridge.mm \
    ExecuTorchTensor_Bridge.mm \
    ExecuTorchValue_Bridge.mm

BRIDGE_OBJECTS = $(BRIDGE_SOURCES:%.mm=$(BUILD_DIR)/%.o)

# Main target
all: $(BUILD_DIR)/example_usage

$(BUILD_DIR)/example_usage: $(BRIDGE_OBJECTS) example_usage.cpp | $(BUILD_DIR)
	$(CXX) $(CXXFLAGS) $(INCLUDES) $(FRAMEWORKS) $(STATIC_LIBS) \
		$(BRIDGE_OBJECTS) example_usage.cpp -o $@

# Build bridge object files
$(BUILD_DIR)/%.o: %.mm | $(BUILD_DIR)
	$(CXX) $(CXXFLAGS) $(OBJCFLAGS) $(INCLUDES) -c $< -o $@

# Create build directory
$(BUILD_DIR):
	mkdir -p $(BUILD_DIR)

# Clean target
clean:
	rm -rf $(BUILD_DIR)

# Test individual compilation
test:
	@echo "Testing individual bridge compilation..."
	$(CXX) $(CXXFLAGS) $(OBJCFLAGS) $(INCLUDES) -c ExecuTorchValue_Bridge.mm -o $(BUILD_DIR)/test_value.o
	@echo "âœ… ExecuTorchValue_Bridge compiles successfully"

# Install (copy bridge files to a project)
install: DEST_DIR ?= /path/to/your/project
install:
	@echo "Installing ExecutTorch C++ bridge to $(DEST_DIR)"
	mkdir -p $(DEST_DIR)/executorch_bridge
	cp *.h $(DEST_DIR)/executorch_bridge/
	cp *.mm $(DEST_DIR)/executorch_bridge/
	cp Makefile.example $(DEST_DIR)/executorch_bridge/Makefile
	@echo "Installation complete!"
	@echo "To use in your project:"
	@echo "1. Add $(DEST_DIR)/executorch_bridge to your include path"
	@echo "2. Compile the .mm files with your project"
	@echo "3. Link against the XCFrameworks in $(XCFRAMEWORK_DIR)"

# Help
help:
	@echo "ExecutTorch C++ Bridge Makefile"
	@echo ""
	@echo "Targets:"
	@echo "  all          - Build the example"
	@echo "  clean        - Clean build artifacts"
	@echo "  install      - Install bridge files to DEST_DIR"
	@echo "  help         - Show this help"
	@echo ""
	@echo "Usage:"
	@echo "  make                    # Build example"
	@echo "  make clean              # Clean"
	@echo "  make install DEST_DIR=/path/to/project  # Install to project"
	@echo ""
	@echo "Build artifacts will be placed in: $(BUILD_DIR)/"
	@echo ""
	@echo "Requirements:"
	@echo "  - Xcode command line tools"
	@echo "  - ExecutTorch XCFrameworks in $(XCFRAMEWORK_DIR)"
	@echo "  - macOS 10.15+ or iOS 15+"

.PHONY: all clean install help test 